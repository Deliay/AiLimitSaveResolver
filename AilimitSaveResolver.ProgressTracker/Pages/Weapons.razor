@using AilimitSaveResolver.Save.Data
@using AilimitSaveResolver.Save.Generated
@inject IStringLocalizer<BladerText> Localizer
<SaveSlotView>
    <SelectedSlot>
        <div class="item-list-group">
            @{

                var skills = Access.Data<SkillIds>().ToDictionary();
                
            }
            <div class="item-list-container">
                <p>@Localizer["Collected"]</p>
                <div class="item-list">
                    @foreach (var inventoryWeapon in context.Slot.Inventory.Weapons)
                    {
                        <div class="item">
                            @{
                                var skillId = GetWeaponSkillId(context.Slot, inventoryWeapon);
                                skills.Remove(skillId);
                            }
                            <img src="./images/weapons/Icon_Weapon_@($"{GetWeaponClass(skillId)}").webp"/>
                            <div class="description">
                                @{ var weapon = Access.Data<WeaponIds>()[inventoryWeapon.WeaponId]; }
                                <div class="name">@(weapon.Name)</div>
                                <div class="level">@(weapon.Level is { Length: > 0 } ? weapon.Level : "未强化")</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="item-list-container">
                <p>@Localizer["NotFound"]</p>
                <div class="item-list">
                    @foreach (var skillItem in skills.Values)
                    {
                        <div class="item">
                            <img src="./images/weapons/Icon_Weapon_@($"{GetWeaponClass(skillItem.Id)}").webp"/>
                            <div class="description">
                                @{ var weapon = Access.Data<WeaponClasses>(); }
                                <div class="name">@(GetWeaponName(skillItem.Id))</div>
                                <div class="level">未收集</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </SelectedSlot>
</SaveSlotView>

@code {

    private uint GetWeaponSkillId(SaveSlot slot, Weapon weapon)
    {
        var skill = slot.Inventory.Skills
            .First(s => s.Index == weapon.SkillIdIndex);

        return skill.SkillId;
    }
    
    private static string GetWeaponClass(uint skillId)
    {
        return Access.Data<WeaponClasses>()
            .GetWeaponClassBySkillId(skillId);
    }
    private static string GetWeaponName(uint skillId)
    {
        return Access.Data<WeaponClasses>()
            .GetWeaponNameBySkillId(skillId);
    }
}